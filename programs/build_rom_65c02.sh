#!/bin/bash
set -e

if [ $# -ne 1 ]; then
  echo "Usage: $0 <basename>"
  exit 1
fi

BASENAME="$1"
PROJECT="sar6502"
ASM="$HOME/Storage/Dev/Vivado/sar6502/programs/${BASENAME}.asm"
BIN="$HOME/Storage/Dev/Vivado/sar6502/programs/${BASENAME}.bin"
MEM="$HOME/Storage/Dev/Vivado/sar6502/programs/${BASENAME}.mem"
COE="$HOME/Storage/Dev/Vivado/sar6502/programs/${BASENAME}.coe"
TCL="$HOME/Storage/Dev/Vivado/sar6502/programs/${BASENAME}_bram.tcl"
DEST_MEM="$HOME/Storage/Dev/Vivado/sar6502/sar6502.srcs/sources_1/new/${BASENAME}.mem"
DEST_COE="$HOME/Storage/Dev/Vivado/sar6502/sar6502.srcs/sources_1/new/${BASENAME}.coe"
DEST_TCL="$HOME/Storage/Dev/Vivado/sar6502/sar6502.srcs/sources_1/new/${BASENAME}_bram.tcl"
DEST_IP="$HOME/Storage/Dev/Vivado/sar6502/sar6502.gen/sources_1/ip/"

# Assemble
ca65 $ASM -o "${BASENAME}.o"
ld65 -C rom_65c02.cfg -o $BIN "${BASENAME}.o"

# Convert binary to mem file (one byte per line, hex)
xxd -p -c 1 $BIN | tr '[:lower:]' '[:upper:]' > $MEM

# Create COE file for Vivado Block Memory Generator
echo "memory_initialization_radix=16;" > $COE
echo "memory_initialization_vector=" >> $COE

# Convert binary to COE format (comma-separated hex values)
xxd -p -c 1 $BIN | tr '[:lower:]' '[:upper:]' | sed 's/$/,/' | sed '$s/,$/;/' >> $COE

# Create IP directory structure
mkdir -p $DEST_IP

# Create TCL script for Block RAM IP core
cat > $TCL << EOF
# Block RAM IP Core for ${BASENAME}
# Generated by build_rom_65c02.sh

create_ip -name blk_mem_gen -vendor xilinx.com -library ip -version 8.4 -module_name ${BASENAME}_bram -dir ${PROJECT}.gen/sources_1/ip/

set_property -dict [list \\
    CONFIG.Memory_Type {Single_Port_ROM} \\
    CONFIG.Port_A_Write_Rate {0} \\
    CONFIG.Write_Width_A {8} \\
    CONFIG.Read_Width_A {8} \\
    CONFIG.Write_Depth_A {8192} \\
    CONFIG.Enable_A {Always_Enabled} \\
    CONFIG.Load_Init_File {true} \\
    CONFIG.Coe_File {C:\\Mac\\Home\\Storage\\Dev\\Vivado\\${PROJECT}\\${PROJECT}.srcs\\sources_1\\new\\${BASENAME}.coe} \\
    CONFIG.Fill_Remaining_Memory_Locations {true} \\
    CONFIG.Remaining_Memory_Locations {00} \\

] [get_ips ${BASENAME}_bram]

generate_target all [get_ips]
EOF

echo "Built $MEM, $COE, and $TCL from $ASM"

# Copy to Vivado source location
mkdir -p "$(dirname "$DEST_MEM")"
cp "$MEM" "$DEST_MEM"
cp "$COE" "$DEST_COE"
cp "$TCL" "$DEST_TCL"

echo "Build complete. Files saved to:"
echo "  Memory: $DEST_MEM"
echo "  COE: $DEST_COE"
echo "  BRAM TCL: $DEST_TCL"